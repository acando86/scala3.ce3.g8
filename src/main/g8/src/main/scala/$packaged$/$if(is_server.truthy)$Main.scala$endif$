package $package$

import cats.effect.{IO, IOApp}
import $package$.config.Settings
import org.http4s.HttpRoutes
import org.http4s.blaze.server.BlazeServerBuilder
import status.StatusEndpoint.fullEndpoint
import sttp.tapir.server.http4s.Http4sServerInterpreter

object Main extends IOApp.Simple:

  val statusRoutes: HttpRoutes[IO] =
      Http4sServerInterpreter[IO]().toRoutes(fullEndpoint)

  val routes = statusRoutes.orNotFound

  def run: IO[Unit] =
    Settings.readConfigOrThrow[IO].flatMap { c =>
          BlazeServerBuilder[IO]
            .bindHttp(c.port, c.host)
            .withHttpApp(routes)
            .serve
            .compile
            .drain
        }



